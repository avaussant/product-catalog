apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: push-image
spec:
  workspaces:
  - name: app-binary
  resources:
    inputs:
    - name: src-image
      type: image
    - name: dest-image
      type: image
  steps:
    - name: run-commands
      image: quay.io/gnunn/skopeo:latest
      script: |
        #!/usr/bin/env bash
        echo "Copying image docker://$(inputs.resources.src-image.url) to docker://$(inputs.resources.dest-image.url)"
        TOKEN="$(oc whoami -t)"
        USER="pipeline"
        skopeo copy --src-tls-verify=false --dest-tls-verify=false --src-creds="${USER}:${TOKEN}" --dest-authfile=/workspace/dest/.docker/config.json docker://$(inputs.resources.src-image.url) docker://$(inputs.resources.dest-image.url)

        # Below is workaround for execution results not working with non-root images
        GIT_COMMIT_DIR=$(workspaces.app-binary.path)/git-sha

        if [ -d "$GIT_COMMIT_DIR" ]; then
          COMMIT_ID=$(cat $GIT_COMMIT_DIR/commit-id)
          IMAGE=$(inputs.resources.dest-image.url)
          IMAGE_NAME=${IMAGE%:*}
          echo "Pushing image with commit id to ${IMAGE_NAME}:${COMMIT_ID}"
          skopeo copy --src-tls-verify=false --dest-tls-verify=false --src-creds="${USER}:${TOKEN}" --dest-authfile=/workspace/dest/.docker/config.json docker://$(inputs.resources.src-image.url) docker://$IMAGE_NAME:$COMMIT_ID
        else
          echo "No git commit id available"
        fi
      volumeMounts:
        - name: dest-docker-config
          mountPath: /workspace/dest/.docker/
  volumes:
    - name: dest-docker-config
      secret:
        secretName: dest-docker-config
        items:
          - key: .dockerconfigjson
            path: config.json